//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import TableViewContent
import TableViewContentViperExtension
import UIKit

protocol {{ module_info.name }}ViewInput: TableViewInput {
    // MARK: Callback from presenter
}

final class {{ module_info.name }}ViewController: UIViewController {
    // MARK: Stored instance properties

    var presenter: {{ module_info.name }}PresenterInput!
    private var tableView: UITableView!

    // MARK: Computed instance properties

    // MARK: IBOutlets

    // MARK: View Life-Cycle methods

    override func viewDidLoad() {
        super.viewDidLoad()
        tableView = UITableView(frame: .zero, style: .insetGrouped)
        view.addSubview(tableView)
        prepareConstraints()
        provider = self
        // TODO: Set data source and delegate
        presenter.viewDidLoad()
    }

    // MARK: Other private methods
    private func prepareConstraints() {
        tableView.topAnchor.constraint(equalTo: view.topAnchor).isActive = true
        tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive = true
        tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive = true
        tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive = true
    }
}

extension {{ module_info.name }}ViewController: SectionProvider {
    var sections: [Section] {
        return presenter.sections
    }
}

extension {{ module_info.name }}ViewController: {{module_info.name}}ViewInput {
    func update(sections: [Section]) {
        // TODO:
        updateDataSource(sections)
    }
}
